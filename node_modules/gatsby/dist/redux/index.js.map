{"version":3,"sources":["../../src/redux/index.js"],"names":["Redux","require","Promise","_","composeWithDevTools","fs","mitt","stringify","emitter","reducers","initialState","JSON","parse","readFileSync","process","cwd","e","store","env","REDUX_DEVTOOLS","sitePackageJSON","composeEnhancers","realtime","port","name","createStore","combineReducers","applyMiddleware","multi","dispatch","Array","isArray","action","filter","Boolean","map","next","saveState","debounce","pickedState","pick","state","writeFile","subscribe","lastAction","getState","emit","type","on","exports","getNodes","nodes","values","getNode","id","hasNodeChanged","digest","node","internal","contentDigest","loadNodeContent","isString","content","resolve","plugin","flattenedPlugins","find","plug","owner","Error","then","getNodeAndSavePathDependency","path","createPageDependency","nodeId"],"mappings":"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","file":"index.js","sourcesContent":["const Redux = require(`redux`)\nconst Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst { composeWithDevTools } = require(`remote-redux-devtools`)\nconst fs = require(`fs`)\nconst mitt = require(`mitt`)\nconst stringify = require(`json-stringify-safe`)\n\n// Create event emitter for actions\nconst emitter = mitt()\n\n// Reducers\nconst reducers = require(`./reducers`)\n\n// Read from cache the old node data.\nlet initialState = {}\ntry {\n  initialState = JSON.parse(\n    fs.readFileSync(`${process.cwd()}/.cache/redux-state.json`)\n  )\n} catch (e) {\n  // ignore errors.\n}\n\nlet store\n// Only setup the Redux devtools if explicitly enabled.\nif (process.env.REDUX_DEVTOOLS === `true`) {\n  const sitePackageJSON = require(`${process.cwd()}/package.json`)\n  const composeEnhancers = composeWithDevTools({\n    realtime: true,\n    port: 19999,\n    name: sitePackageJSON.name,\n  })\n  store = Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState,\n    composeEnhancers(\n      Redux.applyMiddleware(function multi({ dispatch }) {\n        return next => action =>\n          Array.isArray(action)\n            ? action.filter(Boolean).map(dispatch)\n            : next(action)\n      })\n    )\n  )\n} else {\n  store = Redux.createStore(\n    Redux.combineReducers({ ...reducers }),\n    initialState,\n    Redux.applyMiddleware(function multi({ dispatch }) {\n      return next => action =>\n        Array.isArray(action)\n          ? action.filter(Boolean).map(dispatch)\n          : next(action)\n    })\n  )\n}\n\n// Persist state.\nconst saveState = _.debounce(state => {\n  const pickedState = _.pick(state, [\n    `nodes`,\n    `status`,\n    `componentDataDependencies`,\n  ])\n  fs.writeFile(\n    `${process.cwd()}/.cache/redux-state.json`,\n    stringify(pickedState, null, 2),\n    () => {}\n  )\n}, 1000)\n\nstore.subscribe(() => {\n  const lastAction = store.getState().lastAction\n  emitter.emit(lastAction.type, lastAction)\n})\n\nemitter.on(`*`, () => {\n  saveState(store.getState())\n})\n\n/** Event emitter */\nexports.emitter = emitter\n\n/** Redux store */\nexports.store = store\n\n/**\n * Get all nodes from redux store.\n *\n * @returns {Array}\n */\nexports.getNodes = () => {\n  let nodes = _.values(store.getState().nodes)\n  return nodes ? nodes : []\n}\nconst getNode = id => store.getState().nodes[id]\n\n/** Get node by id from store.\n *\n * @param {string} id\n * @returns {Object}\n */\nexports.getNode = getNode\n\n/**\n * Determine if node has changed.\n *\n * @param {string} id\n * @param {string} digest\n * @returns {boolean}\n */\nexports.hasNodeChanged = (id, digest) => {\n  const node = store.getState().nodes[id]\n  if (!node) {\n    return true\n  } else {\n    return node.internal.contentDigest !== digest\n  }\n}\n\n/**\n * Get content for a node from the plugin that created it.\n *\n * @param {Object} node\n * @returns {promise}\n */\nexports.loadNodeContent = node => {\n  if (_.isString(node.internal.content)) {\n    return Promise.resolve(node.internal.content)\n  } else {\n    return new Promise(resolve => {\n      // Load plugin's loader function\n      const plugin = store\n        .getState()\n        .flattenedPlugins.find(plug => plug.name === node.internal.owner)\n      const { loadNodeContent } = require(plugin.resolve)\n      if (!loadNodeContent) {\n        throw new Error(\n          `Could not find function loadNodeContent for plugin ${plugin.name}`\n        )\n      }\n\n      return loadNodeContent(node).then(content => {\n        // TODO update node's content field here.\n        resolve(content)\n      })\n    })\n  }\n}\n\n/**\n * Get node and save path dependency.\n *\n * @param {string} id\n * @param {string} path\n * @returns {Object} node\n */\nexports.getNodeAndSavePathDependency = (id, path) => {\n  const { createPageDependency } = require(`./actions/add-page-dependency`)\n  const node = getNode(id)\n  createPageDependency({ path, nodeId: id })\n  return node\n}\n\n// Start plugin runner which listens to the store\n// and invokes Gatsby API based on actions.\nrequire(`./plugin-runner`)\n"]}