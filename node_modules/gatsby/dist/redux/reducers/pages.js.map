{"version":3,"sources":["../../../src/redux/reducers/pages.js"],"names":["normalize","require","stateToMap","stateMap","Map","state","forEach","set","payload","path","module","exports","action","type","component","plugin","name","console","log","error","JSON","stringify","Error","pluginCreator___NODE","id","pluginCreatorId","Array","from","values","delete"],"mappings":";;AAAA,IAAMA,YAAYC,QAAS,gBAAT,CAAlB;;AAEA,IAAMC,aAAa,SAAbA,UAAa,QAAS;AAC1B,MAAIC,WAAW,IAAIC,GAAJ,EAAf;AACAC,QAAMC,OAAN,CAAc;AAAA,WAAWH,SAASI,GAAT,CAAaC,QAAQC,IAArB,EAA2BD,OAA3B,CAAX;AAAA,GAAd;AACA,SAAOL,QAAP;AACD,CAJD;;AAMAO,OAAOC,OAAP,GAAiB,YAAwB;AAAA,MAAvBN,KAAuB,uEAAf,EAAe;AAAA,MAAXO,MAAW;;AACvC,UAAQA,OAAOC,IAAf;AACE,SAAM,cAAN;AACE,aAAO,EAAP;AACF,SAAM,aAAN;AAAoB;AAClBD,eAAOJ,OAAP,CAAeM,SAAf,GAA2Bd,UAAUY,OAAOJ,OAAP,CAAeM,SAAzB,CAA3B;AACA,YAAI,CAACF,OAAOG,MAAR,IAAkB,CAACH,OAAOG,MAAP,CAAcC,IAArC,EAA2C;AACzCC,kBAAQC,GAAR,CAAa,EAAb;AACAD,kBAAQE,KAAR,CAAcC,KAAKC,SAAL,CAAeT,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAd;AACAK,kBAAQC,GAAR,CAAa,EAAb;AACA,gBAAM,IAAII,KAAJ,CACH;iCADG,CAAN;AAID;AACD;AACAV,eAAOJ,OAAP,CAAee,oBAAf,GAAsCX,OAAOG,MAAP,CAAcS,EAApD;AACAZ,eAAOJ,OAAP,CAAeiB,eAAf,GAAiCb,OAAOG,MAAP,CAAcS,EAA/C;;AAEA,YAAIrB,WAAWD,WAAWG,KAAX,CAAf;AACAF,iBAASI,GAAT,CAAaK,OAAOJ,OAAP,CAAeC,IAA5B,EAAkCG,OAAOJ,OAAzC;AACA,eAAOkB,MAAMC,IAAN,CAAWxB,SAASyB,MAAT,EAAX,CAAP;AACD;AACD,SAAM,aAAN;AAAoB;AAClB,YAAIzB,YAAWD,WAAWG,KAAX,CAAf;AACAF,kBAAS0B,MAAT,CAAgBjB,OAAOJ,OAAP,CAAeC,IAA/B;AACA,eAAOiB,MAAMC,IAAN,CAAWxB,UAASyB,MAAT,EAAX,CAAP;AACD;AACD;AACE,aAAOvB,KAAP;AA5BJ;AA8BD,CA/BD","file":"pages.js","sourcesContent":["const normalize = require(`normalize-path`)\n\nconst stateToMap = state => {\n  let stateMap = new Map()\n  state.forEach(payload => stateMap.set(payload.path, payload))\n  return stateMap\n}\n\nmodule.exports = (state = [], action) => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return []\n    case `CREATE_PAGE`: {\n      action.payload.component = normalize(action.payload.component)\n      if (!action.plugin && !action.plugin.name) {\n        console.log(``)\n        console.error(JSON.stringify(action, null, 4))\n        console.log(``)\n        throw new Error(\n          `Pages can only be created by plugins. There wasn't a plugin set\n        when creating this page.`\n        )\n      }\n      // Link page to its plugin.\n      action.payload.pluginCreator___NODE = action.plugin.id\n      action.payload.pluginCreatorId = action.plugin.id\n\n      let stateMap = stateToMap(state)\n      stateMap.set(action.payload.path, action.payload)\n      return Array.from(stateMap.values())\n    }\n    case `DELETE_PAGE`: {\n      let stateMap = stateToMap(state)\n      stateMap.delete(action.payload.path)\n      return Array.from(stateMap.values())\n    }\n    default:\n      return state\n  }\n}\n"]}