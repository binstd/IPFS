{"version":3,"sources":["../../src/schema/create-key.js"],"names":["invariant","require","nonAlphaNumericExpr","RegExp","module","exports","key","replaced","replace","match","char","index"],"mappings":";;AACA,IAAMA,YAAYC,QAAS,WAAT,CAAlB;AACA,IAAMC,sBAAsB,IAAIC,MAAJ,CAAY,eAAZ,EAA6B,GAA7B,CAA5B;;AAEA;;;;;AAKAC,OAAOC,OAAP,GAAiB,UAACC,GAAD,EAAyB;AACxC;AACAN,YACE,OAAOM,GAAP,KAAgB,QADlB,EAEG,+CAA8CA,GAAI,EAFrD;;AAKA,MAAMC,WAAWD,IAAIE,OAAJ,CAAYN,mBAAZ,EAAkC,GAAlC,CAAjB;;AAEA;AACA,MAAIK,SAASE,KAAT,CAAe,KAAf,CAAJ,EAA2B;AACzB,WAAOF,SAASC,OAAT,CAAiB,IAAjB,EAAuB,UAACE,IAAD,EAAOC,KAAP;AAAA,aAAkBA,UAAU,CAAV,GAAe,GAAf,GAAqB,GAAvC;AAAA,KAAvB,CAAP;AACD;;AAED,SAAOJ,QAAP;AACD,CAfD","file":"create-key.js","sourcesContent":["// @flow\nconst invariant = require(`invariant`)\nconst nonAlphaNumericExpr = new RegExp(`[^a-zA-Z0-9_]`, `g`)\n\n/**\n * GraphQL field names must be a string and cannot contain anything other than\n * alphanumeric characters and `_`. They also can't start with `__` which is\n * reserved for internal fields (`___foo` doesn't work either).\n */\nmodule.exports = (key: string): string => {\n  // Check if the key is really a string otherwise GraphQL will throw.\n  invariant(\n    typeof key === `string`,\n    `Graphql field name (key) is not a string -> ${key}`\n  )\n\n  const replaced = key.replace(nonAlphaNumericExpr, `_`)\n\n  // key is invalid; normalize with leading underscore and rest with x\n  if (replaced.match(/^__/)) {\n    return replaced.replace(/_/g, (char, index) => (index === 0 ? `_` : `x`))\n  }\n\n  return replaced\n}\n"]}