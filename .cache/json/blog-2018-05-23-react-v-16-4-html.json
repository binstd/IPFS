{"data":{"markdownRemark":{"html":"<p>The latest minor release adds support for an oft-requested feature: pointer events!</p>\n<p>It also includes a bugfix for <code class=\"gatsby-code-text\">getDerivedStateFromProps</code>. Check out the full <a href=\"#changelog\">changelog</a> below.</p>\n<h2 id=\"pointer-events\"><a href=\"#pointer-events\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pointer Events</h2>\n<p>The following event types are now available in React DOM:</p>\n<ul>\n<li><code class=\"gatsby-code-text\">onPointerDown</code></li>\n<li><code class=\"gatsby-code-text\">onPointerMove</code></li>\n<li><code class=\"gatsby-code-text\">onPointerUp</code></li>\n<li><code class=\"gatsby-code-text\">onPointerCancel</code></li>\n<li><code class=\"gatsby-code-text\">onGotPointerCapture</code></li>\n<li><code class=\"gatsby-code-text\">onLostPointerCapture</code></li>\n<li><code class=\"gatsby-code-text\">onPointerEnter</code></li>\n<li><code class=\"gatsby-code-text\">onPointerLeave</code></li>\n<li><code class=\"gatsby-code-text\">onPointerOver</code></li>\n<li><code class=\"gatsby-code-text\">onPointerOut</code></li>\n</ul>\n<p>Please note that these events will only work in browsers that support the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\">Pointer Events</a> specification. (At the time of this writing, this includes the latest versions of Chrome, Firefox, Edge, and Internet Explorer.) If your application depends on pointer events, we recommend using a third-party pointer events polyfill. We have opted not to include such a polyfill in React DOM, to avoid an increase in bundle size.</p>\n<p><a href=\"https://codesandbox.io/api/v1/sandboxes/define?parameters=N4IgZglgNgpgziAXKADgQwMYGs0HMYB0AVnAPYB2SoGFALjObVSACYwoNvkYTzMBOMTE0QgoaenCYAaEIOEBaFqQC2SMRPhMAvrtkRybAB7EEyEDUYMRICCpSl-tAAQAlIRhdh-q5wHJ5Tz8AbgAdcjsHJzcPWgARAHkAWWdvXwDYpVUQ8PDLKWcAYQBJV0KAGQBRAH0AZWKALUrnAF5nAA4AVjDyPPE4OGc4_jwAIVIjZxgjekNB92ECQtUHcmtnYHDnZylNVo2t7ecACzQ4QrQUWgBXQURUtCg4GGlD7Z5-DFhymDBae_aAAZXuQjs4Pl8YAAVUgoAHAw7aHrbCBwYZ4XAGXD7MCPZ7I5woQQANwgpGucB-f32gIJRJgpPJcBhKBpPUOFDipAA7qC2gz1i0AHwHUFHWjHVEEVHo3CY8jYtq0fjXGAE7YCxgEWhofj4WgEZ60AAKpAM9H4FyutxgAApNQaHOaYPxiiwAJTssXbAD0PucAHUYDtaI5gxLgwYILQII9waRHCwDJpBqHnAAjYNodOwZxpjCPDDXcT0PPHYMYU4K-BvZx-5wll3OCgEWsSqXTZXCU1waNk8hxGBQHX24nWT2Ir3bChJUhj_YO1oizbe5wQMDOW0AQnbcGlaJGcqx7tFYO2ghu_HI6uc2lr-RcwFgf2kedh2n2u4InZGnh7fc5IcRwdCdelXL8jVqHV6FtW1gAhb5floV8EOhd8T2FTcVzPcEIE-RC_nuVCqRcABqBskJBHDUJZIi8MhFlnHI0MUCoo5tHdUDtiRXIxQoABVVl-THRgl03L8ZUPeVFQeJ4YC45tyAAcVIWgrUvYNhMFEUIJgWgoM0ODTnOS4NPuZVVQ4gkKHKUgpHUm0FxElxhTbSU90g6C7WAYyHLuWTnis3iNRmX8TTsgCByAtAnO008jgfCjqS0rV0HwAANG9EpY2LUrwGAAE0sooAo2GHGK2mws9n3-JKXAUMspXpRkKRItiwRY8zYWcBqv2askKRZdrbxvPqSQGykkP2GrRvcgh-qZRilVhG8L1uUEyp1AkeLA89OBdW0Tyq94SsfXzTJtFD6II5DcPwtCUA_JU5t2egpwS06MwmKCAE9c0q2ttnTRMXXuPwAEYUEmMgoAgFhnAAYhYABOFGUb8YbthUXV5TB8HASh5xAWcAAmAmjAxwHnBUAwAAkYAgXBjlqgAWQEEVXbZuThiU8fZgBSSnOcJCKYwoMHBBLCAxyFsEdvvT7UN-_74rBbmWF5opSgqGp6iaTGTgZpnapKMoqjqRpKgN4H-DYfhXDQJMKXuU2dYtpo61Jg2HF7MXyDB7MYeuehZeqpC6Putqqc6u6GNha3MCwXAfGuQxligRx7nO61BGcAB-fwc1VPxnDB5OYAYUOOvJSsAEFPH7MHyAoGAq5G4KjjWq9NypgAeJNiRDP6YBaYBgaMZWYG0IUqe2fvpdno4pGH0eldoYe72FsEKFNZ1-C5XlR6_TkeXITecO38hd6sfhZzHI-5pnOcp8X6cr7NG_BIfqUBMe1_FOvhaC43Ahzfz3L_c-F834qXCnvPyI9gDH2UqpeBkCoE2TsrAm-8CwEEAwfZC6gg0Fnh9DPYWvcfQDzIWCBSm9N7hAWJ4RISQCCCEMAdQ4vdZTjEmKQtiygiwqGsAQfUlRYBCMYKMH6bpbQBATLQPw7pwigRANofQ7CTDMxUFAZglhZg2HnoPOGLRQhyHkaYoUFCqGqN0EAA\" target=\"_blank\" rel=\"noreferrer\">Check out this example on CodeSandbox.</a></p>\n<p>Huge thanks to <a href=\"https://github.com/philipp-spiess\">Philipp Spiess</a> for contributing this change!</p>\n<h2 id=\"bugfix-for-getderivedstatefromprops\"><a href=\"#bugfix-for-getderivedstatefromprops\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bugfix for <code class=\"gatsby-code-text\">getDerivedStateFromProps</code></h2>\n<p><code class=\"gatsby-code-text\">getDerivedStateFromProps</code> is now called every time a component is rendered, regardless of the cause of the update. Previously, it was only called if the component was re-rendered by its parent, and would not fire as the result of a local <code class=\"gatsby-code-text\">setState</code>. This was an oversight in the initial implementation that has now been corrected. The previous behavior was more similar to <code class=\"gatsby-code-text\">componentWillReceiveProps</code>, but the improved behavior ensures compatibility with React’s upcoming asynchronous rendering mode.</p>\n<p><strong>This bug fix will not affect most apps</strong>, but it may cause issues with a small fraction of components. The rare cases where it does matter fall into one of two categories:</p>\n<h3 id=\"1-avoid-side-effects-in-getderivedstatefromprops\"><a href=\"#1-avoid-side-effects-in-getderivedstatefromprops\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Avoid Side Effects in <code class=\"gatsby-code-text\">getDerivedStateFromProps</code></h3>\n<p>Like the render method, <code class=\"gatsby-code-text\">getDerivedStateFromProps</code> should be a pure function of props and state. Side effects in <code class=\"gatsby-code-text\">getDerivedStateFromProps</code> were never supported, but since it now fires more often than it used to, the recent change may expose previously undiscovered bugs.</p>\n<p>Side effectful code should be moved to other methods: for example, Flux dispatches typically belong inside the originating event handler, and manual DOM mutations belong inside componentDidMount or componentDidUpdate. You can read more about this in our recent post about <a href=\"/blog/2018/03/27/update-on-async-rendering.html\">preparing for asynchronous rendering</a>.</p>\n<h3 id=\"2-compare-incoming-props-to-previous-props-when-computing-controlled-values\"><a href=\"#2-compare-incoming-props-to-previous-props-when-computing-controlled-values\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Compare Incoming Props to Previous Props When Computing Controlled Values</h3>\n<p>The following code assumes <code class=\"gatsby-code-text\">getDerivedStateFromProps</code> only fires on prop changes:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>value <span class=\"token operator\">!==</span> state<span class=\"token punctuation\">.</span>controlledValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Since this method fires on both props and state changes, local updates</span>\n      <span class=\"token comment\">// to the controlled value will be ignored, because the props version</span>\n      <span class=\"token comment\">// always overrides it. Oops!</span>\n      controlledValue<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>One possible way to fix this is to compare the incoming value to the previous value by storing the previous props in state:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">static</span> <span class=\"token function\">getDerivedStateFromProps</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> prevProps <span class=\"token operator\">=</span> state<span class=\"token punctuation\">.</span>prevProps<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Compare the incoming prop to previous prop</span>\n  <span class=\"token keyword\">const</span> controlledValue <span class=\"token operator\">=</span>\n    prevProps<span class=\"token punctuation\">.</span>value <span class=\"token operator\">!==</span> props<span class=\"token punctuation\">.</span>value\n      <span class=\"token operator\">?</span> props<span class=\"token punctuation\">.</span>value\n      <span class=\"token punctuation\">:</span> state<span class=\"token punctuation\">.</span>controlledValue<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Store the previous props in state</span>\n    prevProps<span class=\"token punctuation\">:</span> props<span class=\"token punctuation\">,</span>\n    controlledValue<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>However, <strong>code that “mirrors” props in state usually contains bugs</strong>, whether you use the newer <code class=\"gatsby-code-text\">getDerivedStateFromProps</code> or the legacy <code class=\"gatsby-code-text\">componentWillReceiveProps</code>. We published a follow-up blog post that explains these problems in more detail, and suggests <a href=\"/blog/2018/06/07/you-probably-dont-need-derived-state.html\">simpler solutions that don’t involve <code class=\"gatsby-code-text\">getDerivedStateFromProps()</code></a>.</p>\n<h2 id=\"installation\"><a href=\"#installation\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<p>React v16.4.0 is available on the npm registry.</p>\n<p>To install React 16 with Yarn, run:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">yarn add react@^16.4.0 react-dom@^16.4.0</code></pre>\n      </div>\n<p>To install React 16 with npm, run:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react@^16.4.0 react-dom@^16.4.0</code></pre>\n      </div>\n<p>We also provide UMD builds of React via a CDN:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"gatsby-code-html\"><code class=\"gatsby-code-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react@16/umd/react.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">crossorigin</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/react-dom@16/umd/react-dom.production.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script language-javascript\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<p>Refer to the documentation for <a href=\"/docs/installation.html\">detailed installation instructions</a>.</p>\n<h2 id=\"changelog\"><a href=\"#changelog\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Changelog</h2>\n<h3 id=\"react\"><a href=\"#react\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React</h3>\n<ul>\n<li>Add a new <a href=\"https://github.com/reactjs/rfcs/pull/51\">experimental</a> <code class=\"gatsby-code-text\">React.unstable_Profiler</code> component for measuring performance. (<a href=\"https://github.com/bvaughn\">@bvaughn</a> in <a href=\"https://github.com/facebook/react/pull/12745\">#12745</a>)</li>\n</ul>\n<h3 id=\"react-dom\"><a href=\"#react-dom\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React DOM</h3>\n<ul>\n<li>Add support for the Pointer Events specification. (<a href=\"https://github.com/philipp-spiess\">@philipp-spiess</a> in <a href=\"https://github.com/facebook/react/pull/12507\">#12507</a>)</li>\n<li>Properly call <code class=\"gatsby-code-text\">getDerivedStateFromProps()</code> regardless of the reason for re-rendering. (<a href=\"https://github.com/acdlite\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/12600\">#12600</a> and <a href=\"https://github.com/facebook/react/pull/12802\">#12802</a>)</li>\n<li>Fix a bug that prevented context propagation in some cases. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12708\">#12708</a>)</li>\n<li>Fix re-rendering of components using <code class=\"gatsby-code-text\">forwardRef()</code> on a deeper <code class=\"gatsby-code-text\">setState()</code>. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12690\">#12690</a>)</li>\n<li>Fix some attributes incorrectly getting removed from custom element nodes. (<a href=\"https://github.com/airamrguez\">@airamrguez</a> in <a href=\"https://github.com/facebook/react/pull/12702\">#12702</a>)</li>\n<li>Fix context providers to not bail out on children if there’s a legacy context provider above. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12586\">#12586</a>)</li>\n<li>Add the ability to specify <code class=\"gatsby-code-text\">propTypes</code> on a context provider component. (<a href=\"https://github.com/nicolevy\">@nicolevy</a> in <a href=\"https://github.com/facebook/react/pull/12658\">#12658</a>)</li>\n<li>Fix a false positive warning when using <code class=\"gatsby-code-text\">react-lifecycles-compat</code> in <code class=\"gatsby-code-text\">&lt;StrictMode&gt;</code>. (<a href=\"https://github.com/bvaughn\">@bvaughn</a> in <a href=\"https://github.com/facebook/react/pull/12644\">#12644</a>)</li>\n<li>Warn when the <code class=\"gatsby-code-text\">forwardRef()</code> render function has <code class=\"gatsby-code-text\">propTypes</code> or <code class=\"gatsby-code-text\">defaultProps</code>. (<a href=\"https://github.com/bvaughn\">@bvaughn</a> in <a href=\"https://github.com/facebook/react/pull/12644\">#12644</a>)</li>\n<li>Improve how <code class=\"gatsby-code-text\">forwardRef()</code> and context consumers are displayed in the component stack. (<a href=\"https://github.com/sophiebits\">@sophiebits</a> in <a href=\"https://github.com/facebook/react/pull/12777\">#12777</a>)</li>\n<li>Change internal event names. This can break third-party packages that rely on React internals in unsupported ways. (<a href=\"https://github.com/philipp-spiess\">@philipp-spiess</a> in <a href=\"https://github.com/facebook/react/pull/12629\">#12629</a>)</li>\n</ul>\n<h3 id=\"react-test-renderer\"><a href=\"#react-test-renderer\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Test Renderer</h3>\n<ul>\n<li>Fix the <code class=\"gatsby-code-text\">getDerivedStateFromProps()</code> support to match the new React DOM behavior. (<a href=\"https://github.com/koba04\">@koba04</a> in <a href=\"https://github.com/facebook/react/pull/12676\">#12676</a>)</li>\n<li>Fix a <code class=\"gatsby-code-text\">testInstance.parent</code> crash when the parent is a fragment or another special node. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12813\">#12813</a>)</li>\n<li><code class=\"gatsby-code-text\">forwardRef()</code> components are now discoverable by the test renderer traversal methods. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12725\">#12725</a>)</li>\n<li>Shallow renderer now ignores <code class=\"gatsby-code-text\">setState()</code> updaters that return <code class=\"gatsby-code-text\">null</code> or <code class=\"gatsby-code-text\">undefined</code>. (<a href=\"https://github.com/koba04\">@koba04</a> in <a href=\"https://github.com/facebook/react/pull/12756\">#12756</a>)</li>\n</ul>\n<h3 id=\"react-art\"><a href=\"#react-art\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React ART</h3>\n<ul>\n<li>Fix reading context provided from the tree managed by React DOM. (<a href=\"https://github.com/acdlite\">@acdlite</a> in <a href=\"https://github.com/facebook/react/pull/12779\">#12779</a>)</li>\n</ul>\n<h3 id=\"react-call-return-experimental\"><a href=\"#react-call-return-experimental\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Call Return (Experimental)</h3>\n<ul>\n<li>This experiment was deleted because it was affecting the bundle size and the API wasn’t good enough. It’s likely to come back in the future in some other form. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12820\">#12820</a>)</li>\n</ul>\n<h3 id=\"react-reconciler-experimental\"><a href=\"#react-reconciler-experimental\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Reconciler (Experimental)</h3>\n<ul>\n<li>The <a href=\"https://github.com/facebook/react/blob/c601f7a64640290af85c9f0e33c78480656b46bc/packages/react-noop-renderer/src/createReactNoop.js#L82-L285\">new host config shape</a> is flat and doesn’t use nested objects. (<a href=\"https://github.com/gaearon\">@gaearon</a> in <a href=\"https://github.com/facebook/react/pull/12792\">#12792</a>)</li>\n</ul>","excerpt":"The latest minor release adds support for an oft-requested feature: pointer events! It also includes a bugfix for  . Check out the full  changelog  below. Pointer Events The following event types are now available in React DOM: Please note that these events will only work in browsers that support the  Pointer Events  specification. (At the time of this writing, this includes the latest versions of Chrome, Firefox, Edge, and Internet Explorer.) If your application depends on pointer events, we…","frontmatter":{"title":"React v16.4.0: Pointer Events","next":null,"prev":null,"author":[{"frontmatter":{"name":"Andrew Clark","url":"https://twitter.com/acdlite"}}]},"fields":{"date":"May 22, 2018","path":null,"slug":"/blog/2018/05/23/react-v-16-4.html"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"You Probably Don't Need Derived State"},"fields":{"slug":"/blog/2018/06/07/you-probably-dont-need-derived-state.html"}}},{"node":{"frontmatter":{"title":"React v16.4.0: Pointer Events"},"fields":{"slug":"/blog/2018/05/23/react-v-16-4.html"}}},{"node":{"frontmatter":{"title":"React v16.3.0: New lifecycles and context API"},"fields":{"slug":"/blog/2018/03/29/react-v-16-3.html"}}},{"node":{"frontmatter":{"title":"Update on Async Rendering"},"fields":{"slug":"/blog/2018/03/27/update-on-async-rendering.html"}}},{"node":{"frontmatter":{"title":"Sneak Peek: Beyond React 16"},"fields":{"slug":"/blog/2018/03/01/sneak-peek-beyond-react-16.html"}}},{"node":{"frontmatter":{"title":"Behind the Scenes: Improving the Repository Infrastructure"},"fields":{"slug":"/blog/2017/12/15/improving-the-repository-infrastructure.html"}}},{"node":{"frontmatter":{"title":"Introducing the React RFC Process"},"fields":{"slug":"/blog/2017/12/07/introducing-the-react-rfc-process.html"}}},{"node":{"frontmatter":{"title":"React v16.2.0: Improved Support for Fragments"},"fields":{"slug":"/blog/2017/11/28/react-v16.2.0-fragment-support.html"}}},{"node":{"frontmatter":{"title":"React v16.0"},"fields":{"slug":"/blog/2017/09/26/react-v16.0.html"}}},{"node":{"frontmatter":{"title":"React v15.6.2"},"fields":{"slug":"/blog/2017/09/25/react-v15.6.2.html"}}}]}},"pathContext":{"slug":"/blog/2018/05/23/react-v-16-4.html"}}