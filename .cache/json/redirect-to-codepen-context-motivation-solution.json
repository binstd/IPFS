{"pathContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"// highlight-range{1-4}\\n// Context lets us pass a value deep into the component tree\\n// without explicitly threading it through every component.\\n// Create a context for the current theme (with \\\"light\\\" as the default).\\nconst ThemeContext = React.createContext('light');\\n\\nclass App extends React.Component {\\n  render() {\\n    // highlight-range{1-3,5}\\n    // Use a Provider to pass the current theme to the tree below.\\n    // Any component can read it, no matter how deep it is.\\n    // In this example, we're passing \\\"dark\\\" as the current value.\\n    return (\\n      <ThemeContext.Provider value=\\\"dark\\\">\\n        <Toolbar />\\n      </ThemeContext.Provider>\\n    );\\n  }\\n}\\n\\n// highlight-range{1,2}\\n// A component in the middle doesn't have to\\n// pass the theme down explicitly anymore.\\nfunction Toolbar(props) {\\n  return (\\n    <div>\\n      <ThemedButton />\\n    </div>\\n  );\\n}\\n\\nfunction ThemedButton(props) {\\n  // highlight-range{1-3,6}\\n  // Use a Consumer to read the current theme context.\\n  // React will find the closest theme Provider above and use its value.\\n  // In this example, the current theme is \\\"dark\\\".\\n  return (\\n    <ThemeContext.Consumer>\\n      {theme => <Button {...props} theme={theme} />}\\n    </ThemeContext.Consumer>\\n  );\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}}