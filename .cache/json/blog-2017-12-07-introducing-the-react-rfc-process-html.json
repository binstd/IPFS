{"data":{"markdownRemark":{"html":"<p>We’re adopting an RFC (“request for comments”) process for contributing ideas to React. </p>\n<p>Inspired by <a href=\"https://github.com/yarnpkg/rfcs\">Yarn</a>, <a href=\"https://github.com/emberjs/rfcs\">Ember</a>, and <a href=\"https://github.com/rust-lang/rfcs\">Rust</a>, the goal is to allow React core team members and community members to collaborate on the design of new features. It’s also intended to provide a clear path for ideas to enter the project:</p>\n<ul>\n<li>Create an RFC document detailing your proposal.</li>\n<li>Submit a PR to the <a href=\"https://github.com/reactjs/rfcs\">RFC repository</a>.</li>\n<li>Incorporate feedback into the proposal.</li>\n<li>After discussion, the core team may or may not accept the RFC.</li>\n<li>If the RFC is accepted, the PR is merged.</li>\n</ul>\n<p>RFCs are accepted when they are approved for implementation in React. A more thorough description of the process is available in the repository’s <a href=\"https://github.com/reactjs/rfcs/blob/master/README.md\">README</a>. The exact details may be refined in the future.</p>\n<h2 id=\"who-can-submit-rfcs\"><a href=\"#who-can-submit-rfcs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Who Can Submit RFCs?</h2>\n<p>Anyone! No knowledge of React’s internals is required, nor are you expected to implement the proposal yourself.</p>\n<p>As with our other repositories, we do ask that you complete a <a href=\"https://github.com/reactjs/rfcs#contributor-license-agreement-cla\">Contributor License Agreement</a> before we can accept your PR.</p>\n<h2 id=\"what-types-of-changes-should-be-submitted-as-rfcs\"><a href=\"#what-types-of-changes-should-be-submitted-as-rfcs\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What Types of Changes Should Be Submitted As RFCs?</h2>\n<p>Generally, any idea that would benefit from additional review or design before being implemented is a good candidate for an RFC. As a rule of thumb, this means any proposal that adds, changes, or removes a React API.</p>\n<p>Not every change must go through the RFC process. Bug fixes or performance improvements that don’t touch the API can be submitted directly to the main library.</p>\n<p>We now have several repositories where you can submit contributions to React:</p>\n<ul>\n<li><strong>Issues, bugfixes, and code changes to the main library</strong>: <a href=\"https://github.com/facebook/react\">facebook/react</a></li>\n<li><strong>Website and documentation</strong>: <a href=\"https://github.com/reactjs/reactjs.org\">reactjs/reactjs.org</a></li>\n<li><strong>Ideas for changes that need additional review before being implemented</strong>: <a href=\"https://github.com/reactjs/rfcs\">reactjs/rfcs</a></li>\n</ul>\n<h2 id=\"rfc-for-a-new-context-api\"><a href=\"#rfc-for-a-new-context-api\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>RFC for A New Context API</h2>\n<p>Coinciding with the launch of our RFC process, we’ve submitted a <a href=\"https://github.com/reactjs/rfcs/pull/2\">proposal for a new version of context</a>. The proposal has already received many valuable comments from the community that we will incorporate into the design of the new API.</p>\n<p>The context PR is a good example of how a typical RFC should be structured. We’re excited to start receiving your proposals!</p>","excerpt":"We’re adopting an RFC (“request for comments”) process for contributing ideas to React.  Inspired by  Yarn ,  Ember , and  Rust , the goal is to allow React core team members and community members to collaborate on the design of new features. It’s also intended to provide a clear path for ideas to enter the project: Create an RFC document detailing your proposal. Submit a PR to the  RFC repository . Incorporate feedback into the proposal. After discussion, the core team may or may not accept the…","frontmatter":{"title":"Introducing the React RFC Process","next":null,"prev":null,"author":[{"frontmatter":{"name":"Andrew Clark","url":"https://twitter.com/acdlite"}}]},"fields":{"date":"December 06, 2017","path":null,"slug":"/blog/2017/12/07/introducing-the-react-rfc-process.html"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"You Probably Don't Need Derived State"},"fields":{"slug":"/blog/2018/06/07/you-probably-dont-need-derived-state.html"}}},{"node":{"frontmatter":{"title":"React v16.4.0: Pointer Events"},"fields":{"slug":"/blog/2018/05/23/react-v-16-4.html"}}},{"node":{"frontmatter":{"title":"React v16.3.0: New lifecycles and context API"},"fields":{"slug":"/blog/2018/03/29/react-v-16-3.html"}}},{"node":{"frontmatter":{"title":"Update on Async Rendering"},"fields":{"slug":"/blog/2018/03/27/update-on-async-rendering.html"}}},{"node":{"frontmatter":{"title":"Sneak Peek: Beyond React 16"},"fields":{"slug":"/blog/2018/03/01/sneak-peek-beyond-react-16.html"}}},{"node":{"frontmatter":{"title":"Behind the Scenes: Improving the Repository Infrastructure"},"fields":{"slug":"/blog/2017/12/15/improving-the-repository-infrastructure.html"}}},{"node":{"frontmatter":{"title":"Introducing the React RFC Process"},"fields":{"slug":"/blog/2017/12/07/introducing-the-react-rfc-process.html"}}},{"node":{"frontmatter":{"title":"React v16.2.0: Improved Support for Fragments"},"fields":{"slug":"/blog/2017/11/28/react-v16.2.0-fragment-support.html"}}},{"node":{"frontmatter":{"title":"React v16.0"},"fields":{"slug":"/blog/2017/09/26/react-v16.0.html"}}},{"node":{"frontmatter":{"title":"React v15.6.2"},"fields":{"slug":"/blog/2017/09/25/react-v15.6.2.html"}}}]}},"pathContext":{"slug":"/blog/2017/12/07/introducing-the-react-rfc-process.html"}}